<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- ========================= DATASOURCE DEFINITION ========================= -->

    <!-- Configurer that replaces ${...} placeholders with values from a properties
        file -->
    <!-- (in this case, JDBC-related settings for the dataSource definition
        below) -->

    <!-- 不加密 -->
    <context:property-placeholder location="classpath:jdbc.properties" order="1" ignore-unresolvable="true"/>

    <!-- 加密时候使用 -->
    <!-- <bean id="propertyConfig" class="com.bsoft.mobile.hlgl.core.security.PropertyPlaceholderConfigurerExt">
        <property mkmc="locations"> <list> <mksl>classpath:jdbc_sqlserver.properties</mksl>
        </list> </property> </bean> -->

    <bean id="parentDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close" abstract="true">

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${druid.initialSize}"/>
        <property name="minIdle" value="${druid.minIdle}"/>
        <property name="maxActive" value="${druid.maxActive}"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${druid.maxWait}"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}"/>

        <!-- sql server 注释掉 -->
        <property name="validationQuery" value="${druid.validationQuery}" />
        <property name="testWhileIdle" value="${druid.testWhileIdle}"/>


        <property name="testOnBorrow" value="${druid.testOnBorrow}"/>
        <property name="testOnReturn" value="${druid.testOnReturn}"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <!-- 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxOpenPreparedStatements"
                  value="${druid.maxOpenPreparedStatements}"/>

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="${druid.filters}"/>

        <!-- 每5分钟输出一次统计日志 -->
        <property name="timeBetweenLogStatsMillis" value="300000"/>
        <!-- 合并查询 -->
        <property name="connectionProperties" value="${druid.connectionProperties}" />

        <!--合并多个DruidDataSource的监控数据-->
        <!--<property mkmc="useGloalDataSourceStat" mksl="true" />-->

    </bean>

    <!-- 连接移动BSMOB40 库 -->
    <bean id="mobDataSource" parent="parentDataSource">
        <property name="driverClassName" value="${mob.driverClassName}"/>
        <property name="url" value="${mob.url}"/>
        <property name="username" value="${mob.username}"/>
        <property name="password" value="${mob.password}"/>
    </bean>

    <!-- 连接BSHRP43 库 -->
    <bean id="hrpDataSource" parent="parentDataSource">
        <property name="driverClassName" value="${hrp.driverClassName}"/>
        <property name="url" value="${hrp.url}"/>
        <property name="username" value="${hrp.username}"/>
        <property name="password" value="${hrp.password}"/>
    </bean>

    <!-- 连接门户 库 -->
    <bean id="portalDataSource" parent="parentDataSource">
        <property name="driverClassName" value="${portal.driverClassName}"/>
        <property name="url" value="${portal.url}"/>
        <property name="username" value="${portal.username}"/>
        <property name="password" value="${portal.password}"/>
    </bean>

    <bean id="dataSource"
          class="com.bsoft.mob.datasource.MultiRoutingDataSource">
        <property name="targetDataSources">
            <map key-type="com.bsoft.mob.datasource.DataSource">
                <entry key="MOB" value-ref="mobDataSource"/>
                <entry key="HRP" value-ref="hrpDataSource"/>
                <entry key="PORTAL" value-ref="portalDataSource"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="portalDataSource"/>
    </bean>


    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!-- enable autowire -->
    <context:annotation-config/>

    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!-- define the SqlSessionFactory,use short aliases for beans -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.bsoft.mob.domain,com.bsoft.mob.pivas.domain"/>
        <property name="databaseIdProvider" ref="databaseIdProvider"/>
        <property name="configLocation" value="classpath:database-mybatis-config.xml"/>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.bsoft.mob.jdbc.persistence,com.bsoft.mob.pivas.persistence"/>
    </bean>

    <!-- mybatis multi-db feature -->
    <bean id="vendorProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="SQL Server">sqlserver</prop>
                <prop key="Oracle">oracle</prop>
            </props>
        </property>
    </bean>

    <bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
        <property name="properties" ref="vendorProperties"/>
    </bean>



</beans>
